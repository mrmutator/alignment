#PBS -S /bin/bash
#PBS -lnodes=1:cores16
#PBS -lwalltime=%(wall_time)s
cd "$TMPDIR"

%(cp_exempt_file)s

for part in $(seq 1 %(num_nodes)s);
do
 cp %(it0_dir)s/%(job_name)s.corpus.${part}.gz corpus.psnt.${part}.gz
 cp %(it0_dir)s/%(job_name)s.params.${part}.gz params.${part}.gz
done
gunzip *.gz

module load python
source %(script_dir)s/venv/bin/activate
for it in $(seq 1 %(num_iterations)s);
do
 >&2 echo "Starting iteration " ${it};
 # E-Steps
  for part in $(seq 1 %(num_nodes)s);
  do
   >&2 echo "Starting E-Step " ${part};
   python %(script_dir)s/word_alignment/models/hmt/hmt_worker.py -corpus corpus.psnt.${part} -params params.${part} -num_workers %(num_workers)s -p_0 %(p_0)s -alpha %(alpha)s -fertility %(fertility)s %(exempt_chain_params)s -buffer_size %(buffer_size)s
   mv params.${part}.counts params.counts.${part}
  done
 # update
 >&2 echo "Starting M-step";
 python %(script_dir)s/word_alignment/models/hmt/update_parameters.py -dir .
 rename "s/^params.params/new_params/" params.params.*
 rm params.*
 rename "s/new_params/params/" new_params.*
 mv log_likelihood log_likelihood.${it}
 cp log_likelihood.${it} %(result_dir)s/%(job_name)s.log_likelihood.${it}
 cp params.* %(result_dir)s/
 # evaluate
 >&2 echo "Aligning corpus";
 for part in $(seq 1 %(align_parts)s);
 do
 >&2 echo "Aligning part " ${part};
   python %(script_dir)s/word_alignment/models/hmt/get_viterbi.py -corpus corpus.psnt.${part}  -params params.${part} -out_file corpus.aligned.${part} -num_workers %(num_workers)s -p_0 %(p_0)s -alpha %(alpha)s -fertility %(fertility)s %(exempt_chain_params)s -buffer_size %(buffer_size)s -limit %(align_limit)s
   done
 cat corpus.aligned.* > all.aligned.${it}
 rm corpus.aligned.*

 cp all.aligned.${it} %(result_dir)s/%(job_name)s.aligned.${it}
done

>&2 echo "Done. Copying files now."
rename "s/params/%(job_name)s.params/" params.*
gzip %(job_name)s.params.*
cp %(job_name)s.params.*.gz %(result_dir)s/
wait
